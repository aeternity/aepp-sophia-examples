include "DateTimeLibrary.aes"
contract DateTimeWithInclude =
  entrypoint get_year(timestamp : int) : int = 
    Date.get_year(timestamp)

  entrypoint get_month(timestamp : int) : int = 
    Date.get_month(timestamp)
    
  entrypoint get_day(timestamp : int) : int = 
    Date.get_day(timestamp)
    
  entrypoint get_hour(timestamp : int) : int = 
    Date.get_hour(timestamp)
    
  entrypoint get_minute(timestamp : int) : int = 
    Date.get_minute(timestamp)

  entrypoint get_second(timestamp : int) : int = 
    Date.get_second(timestamp)

  entrypoint get_weekday(timestamp : int) : int = 
    Date.get_weekday(timestamp)

  entrypoint is_leap_year(year : int) : bool = 
    Date.is_leap_year(year)

  entrypoint to_timestamp(year : int, month : int, day : int, hour : int, minute : int, second : int) : int = 
    Date.to_timestamp(year,month,day,hour,minute,second)

  entrypoint add_years(timestamp : int, years : int) : int = 
    Date.add_years(timestamp, years)

  entrypoint sub_years(timestamp : int, years : int) : int = 
    Date.sub_years(timestamp, years)

  entrypoint add_months(timestamp : int, months : int) : int = 
    Date.add_months(timestamp, months)

  entrypoint sub_months(timestamp : int, months : int) : int = 
    Date.sub_months(timestamp, months)

  entrypoint add_days(timestamp: int, days : int) : int = 
    Date.add_days(timestamp, days)

  entrypoint sub_days(timestamp: int, days : int) : int = 
    Date.sub_days(timestamp, days)

  entrypoint add_hours(timestamp : int, hours : int) : int = 
    Date.add_hours(timestamp, hours)

  entrypoint sub_hours(timestamp : int, hours : int) : int = 
    Date.sub_hours(timestamp, hours)

  entrypoint add_minutes(timestamp : int, minutes : int) : int = 
    Date.add_minutes(timestamp, minutes)

  entrypoint sub_minutes(timestamp : int, minutes : int) : int = 
    Date.sub_minutes(timestamp, minutes)
  
  entrypoint add_seconds(timestamp : int, seconds : int) : int = 
    Date.add_seconds(timestamp, seconds)

  entrypoint sub_seconds(timestamp : int, seconds : int) : int = 
    Date.sub_seconds(timestamp, seconds)

  entrypoint diff_years(from_timestamp : int, to_timestamp : int) : int = 
    Date.diff_years(from_timestamp, to_timestamp)

  entrypoint diff_months(from_timestamp : int, to_timestamp : int) : int = 
    Date.diff_months(from_timestamp, to_timestamp)

  entrypoint diff_days(from_timestamp : int, to_timestamp : int) : int = 
    Date.diff_days(from_timestamp, to_timestamp)

  entrypoint diff_hours(from_timestamp : int, to_timestamp : int) : int = 
    Date.diff_hours(from_timestamp, to_timestamp)

  entrypoint diff_minutes(from_timestamp : int, to_timestamp : int) : int = 
    Date.diff_minutes(from_timestamp, to_timestamp)

  entrypoint diff_seconds(from_timestamp : int, to_timestamp : int) : int = 
    Date.diff_seconds(from_timestamp, to_timestamp)

  entrypoint is_valid_date(year : int, month : int, day : int) : bool =
    Date.is_valid_date(year, month, day)

  entrypoint is_valid_date_time(year : int, month : int, day : int, hour : int, minute : int, second : int) : bool =
    Date.is_valid_date_time(year, month, day, hour, minute, second)

  entrypoint is_week_day(timestamp : int) : bool =
    Date.is_week_day(timestamp)

  entrypoint is_week_end(timestamp : int) : bool =
    Date.is_week_end(timestamp)